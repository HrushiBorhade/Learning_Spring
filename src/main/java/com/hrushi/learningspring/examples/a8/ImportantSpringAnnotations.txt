Important Spring Annotations

@Configuration: Indicates that a class declares one or more 
				@Bean methods and may be processed by the Spring 
				Container to generate bean definitions

@ComponentScan: Define specific packages to scan for components.
				If Specific packages are not defined , scanning 
				will occur from the package of the class that 
				declares this annotation.

@Bean: 	Indicates that a method produces a bean to be managed by 
		the Spring Container 

@Component : Indicates that an annotated class is a 'component'

@Service : 	Specialization of @Component indicating that an annotated class 
			has business logic.

@Controller : 	Specialization of @Component indicating that an annotated
				class is a "Controller" Used to define controllers in your
				web applications and REST API

@Repository : 	Specialization of @Component indicating that an annotated
				class is used to retrieve and/or manipulate data in a database.

@Primary : 	Indicates that a bean should be given preference when multiple 
			candidates are qualified to autowire a single-valued dependency

@Qualifier: Used on a field or parameter as a Qualifier for candidate beans
			when autowiring

@Lazy : Indicates that a Bean has to be Lazy initialized,Absence of @Lazy 
		Annotation will lead to eager initialization
		 
@Scope(value=
ConfigurableBeanFactory.SCOPE_PROTOTYPE) : 	Defines a bean to be a prototype - 
											a new instance will be created every time
											you refer to the bean.Default scope is 
											singleton-one instance per IOC Container
											
@PostConstruct: Identifies the method that will be executed after dependency
				injection is done to perform any initialization.
				
@PreDestroy : 	Identifies the method that will receive the callback notifications
				to signal that the instance is in the process of being removed
				by the container.Typically used to release resources that it has 
				been holding.

@Named : Jakarta Contexts and Dependency Injection(CDI) Annotation similar to Component

@Inject : Jakarta Contexts and Dependency Injection(CDI) Annotation similar to Autowired.
	 	 